{"version":3,"sources":["video-worker.js"],"names":["VideoWorker","modules","installedModules","__webpack_require__","moduleId","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","_typeof","Symbol","iterator","obj","constructor","_createClass","defineProperties","target","props","length","descriptor","writable","key","Constructor","protoProps","staticProps","Deferred","this","_done","_fail","addEventListener","el","eventName","handler","execute","list","args","Array","slice","apply","resolve","arguments","reject","done","callback","push","fail","ID","YoutubeAPIadded","VimeoAPIadded","loadingYoutubePlayer","loadingVimeoPlayer","loadingYoutubeDefer","loadingVimeoDefer","url","options","instance","TypeError","_classCallCheck","self","options_default","autoplay","loop","mute","volume","showContols","startTime","endTime","extend","videoID","parseURL","loadAPI","init","out","_arguments","keys","forEach","match","videoFormats","result","ready","Youtube","Vimeo","Local","split","val","type","userEventsList","_this","_this2","start","player","playVideo","seekTo","YT","PlayerState","PLAYING","getPlayerState","setCurrentTime","getPaused","then","paused","play","currentTime","pauseVideo","pause","setVolume","$iframe","muted","unmute","undefined","videoImage","availableSizes","step","tempImg","Image","onload","naturalWidth","width","src","request","XMLHttpRequest","open","onreadystatechange","readyState","status","response","JSON","parse","responseText","thumbnail_large","send","onAPIready","hiddenDiv","document","createElement","style","display","playerOptions","videoId","playerVars","autohide","rel","playsinline","iv_load_policy","modestbranding","controls","showinfo","disablekb","ytStarted","ytProgressInterval","events","onReady","e","fire","onStateChange","data","ENDED","PAUSED","setInterval","getCurrentTime","clearInterval","firstInit","div","setAttribute","playerID","appendChild","body","window","Player","getElementById","videoWidth","parseInt","getAttribute","videoHeight","getVideoWidth","getVideoHeight","height","vmStarted","on","seconds","element","source","locStarted","tag","head","getElementsByTagName","loaded","onYouTubeIframeAPIReady","vimeoInterval","default"],"mappings":";;;;;;AAAA,IAAAA,YACA,SAAAC,GAEA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAJ,EAAAG,GAAAK,KAAAH,EAAAD,QAAAC,EAAAA,EAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAqCA,OAhCAF,EAAAO,EAAAT,EAGAE,EAAAQ,EAAAT,EAGAC,EAAAS,EAAA,SAAAP,EAAAQ,EAAAC,GACAX,EAAAY,EAAAV,EAAAQ,IACAG,OAAAC,eAAAZ,EAAAQ,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAX,EAAAkB,EAAA,SAAAf,GACA,IAAAQ,EAAAR,GAAAA,EAAAgB,WACA,WAAA,OAAAhB,EAAA,SACA,WAAA,OAAAA,GAEA,OADAH,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAQ,EAAAC,GAAA,OAAAR,OAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGArB,EAAAwB,EAAA,GAGAxB,EAAAA,EAAAyB,EAAA,GA9DA,EAmEA,SAAAtB,EAAAD,EAAAF,GAEAG,EAAAD,QAAAF,EAAA,IAKA,SAAAG,EAAAD,EAAAF,GAEA,aAGAa,OAAAC,eAAAZ,EAAA,cACAwB,OAAA,IAGA,IAAAC,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAAC,GAAA,cAAAA,GAAA,SAAAA,GAAA,OAAAA,GAAA,mBAAAF,QAAAE,EAAAC,cAAAH,QAAAE,IAAAF,OAAAN,UAAA,gBAAAQ,GAEAE,EAAA,WAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAA,IAAA/B,EAAA,EAAAA,EAAA+B,EAAAC,OAAAhC,IAAA,CAAA,IAAAiC,EAAAF,EAAA/B,GAAAiC,EAAArB,WAAAqB,EAAArB,aAAA,EAAAqB,EAAAtB,cAAA,EAAA,UAAAsB,IAAAA,EAAAC,UAAA,GAAAzB,OAAAC,eAAAoB,EAAAG,EAAAE,IAAAF,IAAA,OAAA,SAAAG,EAAAC,EAAAC,GAAA,OAAAD,GAAAR,EAAAO,EAAAlB,UAAAmB,GAAAC,GAAAT,EAAAO,EAAAE,GAAAF,GAAA,GAMA,SAAAG,IACAC,KAAAC,SACAD,KAAAE,SAyBA,SAAAC,EAAAC,EAAAC,EAAAC,GACAF,EAAAD,iBAAAE,EAAAC,GAxBAP,EAAArB,WACA6B,QAAA,SAAAC,EAAAC,GACA,IAAAjD,EAAAgD,EAAAhB,OAEA,IADAiB,EAAAC,MAAAhC,UAAAiC,MAAAjD,KAAA+C,GACAjD,KACAgD,EAAAhD,GAAAoD,MAAA,KAAAH,IAGAI,QAAA,WACAb,KAAAO,QAAAP,KAAAC,MAAAa,YAEAC,OAAA,WACAf,KAAAO,QAAAP,KAAAE,MAAAY,YAEAE,KAAA,SAAAC,GACAjB,KAAAC,MAAAiB,KAAAD,IAEAE,KAAA,SAAAF,GACAjB,KAAAE,MAAAgB,KAAAD,KASA,IAAAG,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,IAAA1B,EACA2B,EAAA,IAAA3B,EAEA9C,EAAA,WACA,SAAAA,EAAA0E,EAAAC,IA5CA,SAAAC,EAAAjC,GAAA,KAAAiC,aAAAjC,GAAA,MAAA,IAAAkC,UAAA,qCA6CAC,CAAA/B,KAAA/C,GAEA,IAAA+E,EAAAhC,KAEAgC,EAAAL,IAAAA,EAEAK,EAAAC,iBACAC,UAAA,EACAC,MAAA,EACAC,MAAA,EACAC,OAAA,IACAC,aAAA,EAGAC,UAAA,EACAC,QAAA,GAGAR,EAAAJ,QAAAI,EAAAS,UAAAT,EAAAC,gBAAAL,GAGAI,EAAAU,QAAAV,EAAAW,SAAAhB,GAGAK,EAAAU,UACAV,EAAAZ,GAAAA,IACAY,EAAAY,UACAZ,EAAAa,QAisBA,OA1rBAzD,EAAAnC,IACA0C,IAAA,SACAb,MAAA,SAAAgE,GACA,IAAAC,EAAAjC,UAWA,OATAgC,EAAAA,MACA7E,OAAA+E,KAAAlC,WAAAmC,QAAA,SAAAzF,GACAuF,EAAAvF,IAGAS,OAAA+E,KAAAD,EAAAvF,IAAAyF,QAAA,SAAAtD,GACAmD,EAAAnD,GAAAoD,EAAAvF,GAAAmC,OAGAmD,KAGAnD,IAAA,WACAb,MAAA,SAAA6C,GAmCA,IA9BAuB,EAQAA,EAOAC,EACAC,EACAC,EAaAC,MA9BAJ,EA8BAvB,EA9BAuB,MADA,iEAEA,KAAAA,EAAA,GAAA1D,SAAA0D,EAAA,GA8BAK,MAvBAL,EAuBAvB,EAvBAuB,MADA,kJAEAA,EAAA,KAAAA,EAAA,GAuBAM,GAjBAL,EAiBAxB,EAjBA8B,MAAA,iCACAL,KACAC,EAAA,EACAF,EAAAF,QAAA,SAAAS,GAEA,IAAAR,EAAAQ,EAAAR,MAAA,6BACAA,GAAAA,EAAA,IAAAA,EAAA,KAEAE,EAAA,QAAAF,EAAA,GAAA,MAAAA,EAAA,IAAAA,EAAA,GACAG,EAAA,OAGAA,GAAAD,GAOA,OAAAE,GACAtD,KAAA2D,KAAA,UACAL,GACAC,GACAvD,KAAA2D,KAAA,QACAJ,KACAC,IACAxD,KAAA2D,KAAA,QACAH,MAMA7D,IAAA,UACAb,MAAA,WACA,QAAAkB,KAAA0C,WAMA/C,IAAA,KACAb,MAAA,SAAAhB,EAAAmD,GACAjB,KAAA4D,eAAA5D,KAAA4D,oBAGA5D,KAAA4D,eAAA9F,KAAAkC,KAAA4D,eAAA9F,QAAAoD,KAAAD,MAGAtB,IAAA,MACAb,MAAA,SAAAhB,EAAAmD,GACA,IAAA4C,EAAA7D,KAEAA,KAAA4D,gBAAA5D,KAAA4D,eAAA9F,KAIAmD,EAGAjB,KAAA4D,eAAA9F,GAAAmF,QAAA,SAAAS,EAAA/D,GACA+D,IAAAzC,IACA4C,EAAAD,eAAA9F,GAAA6B,IAAA,YAJAK,KAAA4D,eAAA9F,OAUA6B,IAAA,OACAb,MAAA,SAAAhB,GACA,IAAAgG,EAAA9D,KAEAS,KAAAE,MAAAjD,KAAAoD,UAAA,GACAd,KAAA4D,qBAAA,IAAA5D,KAAA4D,eAAA9F,IACAkC,KAAA4D,eAAA9F,GAAAmF,QAAA,SAAAS,GAEAA,GACAA,EAAA9C,MAAAkD,EAAArD,QAMAd,IAAA,OACAb,MAAA,SAAAiF,GACA,IAAA/B,EAAAhC,KACAgC,EAAAgC,SAIA,YAAAhC,EAAA2B,MAAA3B,EAAAgC,OAAAC,iBACA,IAAAF,GACA/B,EAAAgC,OAAAE,OAAAH,GAAA,GAEAI,GAAAC,YAAAC,UAAArC,EAAAgC,OAAAM,kBACAtC,EAAAgC,OAAAC,aAIA,UAAAjC,EAAA2B,YACA,IAAAI,GACA/B,EAAAgC,OAAAO,eAAAR,GAEA/B,EAAAgC,OAAAQ,YAAAC,KAAA,SAAAC,GACAA,GACA1C,EAAAgC,OAAAW,UAKA,UAAA3C,EAAA2B,YACA,IAAAI,IACA/B,EAAAgC,OAAAY,YAAAb,GAEA/B,EAAAgC,OAAAU,QACA1C,EAAAgC,OAAAW,YAKAhF,IAAA,QACAb,MAAA,WACA,IAAAkD,EAAAhC,KACAgC,EAAAgC,SAIA,YAAAhC,EAAA2B,MAAA3B,EAAAgC,OAAAa,YACAV,GAAAC,YAAAC,UAAArC,EAAAgC,OAAAM,kBACAtC,EAAAgC,OAAAa,aAIA,UAAA7C,EAAA2B,MACA3B,EAAAgC,OAAAQ,YAAAC,KAAA,SAAAC,GACAA,GACA1C,EAAAgC,OAAAc,UAKA,UAAA9C,EAAA2B,OACA3B,EAAAgC,OAAAU,QACA1C,EAAAgC,OAAAc,aAKAnF,IAAA,OACAb,MAAA,WACA,IAAAkD,EAAAhC,KACAgC,EAAAgC,SAIA,YAAAhC,EAAA2B,MAAA3B,EAAAgC,OAAA5B,MACAJ,EAAAgC,OAAA5B,OAUA,UAAAJ,EAAA2B,MAAA3B,EAAAgC,OAAAe,WACA/C,EAAAgC,OAAAe,UAAA,GAUA,UAAA/C,EAAA2B,OACA3B,EAAAgD,QAAAC,OAAA,OAWAtF,IAAA,SACAb,MAAA,WACA,IAAAkD,EAAAhC,KACAgC,EAAAgC,SAIA,YAAAhC,EAAA2B,MAAA3B,EAAAgC,OAAA5B,MACAJ,EAAAgC,OAAAkB,SAGA,UAAAlD,EAAA2B,MAAA3B,EAAAgC,OAAAe,WACA/C,EAAAgC,OAAAe,UAAA/C,EAAAJ,QAAAS,QAGA,UAAAL,EAAA2B,OACA3B,EAAAgD,QAAAC,OAAA,OAIAtF,IAAA,YACAb,MAAA,WACA,IAAAuD,EAAA,EAAAvB,UAAAtB,aAAA2F,IAAArE,UAAA,IAAAA,UAAA,GAEAkB,EAAAhC,KACAgC,EAAAgC,QAAA3B,IAIA,YAAAL,EAAA2B,MAAA3B,EAAAgC,OAAAe,WACA/C,EAAAgC,OAAAe,UAAA1C,GAGA,UAAAL,EAAA2B,MAAA3B,EAAAgC,OAAAe,WACA/C,EAAAgC,OAAAe,UAAA1C,GAGA,UAAAL,EAAA2B,OACA3B,EAAAgD,QAAA3C,OAAAA,EAAA,SAIA1C,IAAA,cACAb,MAAA,SAAAmC,GACA,IAAAe,EAAAhC,KAEA,GAAAgC,EAAAoD,WACAnE,EAAAe,EAAAoD,gBADA,CAKA,GAAA,YAAApD,EAAA2B,KAAA,CACA,IAAA0B,GAAA,gBAAA,YAAA,YAAA,KACAC,EAAA,EAEAC,EAAA,IAAAC,MACAD,EAAAE,OAAA,WAEA,OAAAzF,KAAA0F,cAAA1F,KAAA2F,QAAAL,IAAAD,EAAA7F,OAAA,GAEAwC,EAAAoD,WAAA,8BAAApD,EAAAU,QAAA,IAAA2C,EAAAC,GAAA,OACArE,EAAAe,EAAAoD,cAGAE,IACAtF,KAAA4F,IAAA,8BAAA5D,EAAAU,QAAA,IAAA2C,EAAAC,GAAA,SAGAC,EAAAK,IAAA,8BAAA5D,EAAAU,QAAA,IAAA2C,EAAAC,GAAA,OAGA,GAAA,UAAAtD,EAAA2B,KAAA,CACA,IAAAkC,EAAA,IAAAC,eACAD,EAAAE,KAAA,MAAA,kCAAA/D,EAAAU,QAAA,SAAA,GACAmD,EAAAG,mBAAA,WACA,GAAA,IAAAhG,KAAAiG,YACA,KAAAjG,KAAAkG,QAAAlG,KAAAkG,OAAA,IAAA,CAEA,IAAAC,EAAAC,KAAAC,MAAArG,KAAAsG,cACAtE,EAAAoD,WAAAe,EAAA,GAAAI,gBACAtF,EAAAe,EAAAoD,cAMAS,EAAAW,OACAX,EAAA,UAIAlG,IAAA,YACAb,MAAA,SAAAmC,GACA,IAAAe,EAAAhC,KAGAgC,EAAAgD,QACA/D,EAAAe,EAAAgD,SAKAhD,EAAAyE,WAAA,WACA,IAAAC,OAAA,EAOA,GANA1E,EAAAgD,WACA0B,EAAAC,SAAAC,cAAA,QACAC,MAAAC,QAAA,QAIA,YAAA9E,EAAA2B,KAAA,CACA3B,EAAA+E,iBACA/E,EAAA+E,cAAAC,QAAAhF,EAAAU,QACAV,EAAA+E,cAAAE,YACAC,SAAA,EACAC,IAAA,EACAjF,SAAA,EAEAkF,YAAA,GAIApF,EAAAJ,QAAAU,cACAN,EAAA+E,cAAAE,WAAAI,eAAA,EACArF,EAAA+E,cAAAE,WAAAK,eAAA,EACAtF,EAAA+E,cAAAE,WAAAM,SAAA,EACAvF,EAAA+E,cAAAE,WAAAO,SAAA,EACAxF,EAAA+E,cAAAE,WAAAQ,UAAA,GAIA,IAAAC,OAAA,EACAC,OAAA,EACA3F,EAAA+E,cAAAa,QACAC,QAAA,SAAAC,GAEA9F,EAAAJ,QAAAQ,KACA0F,EAAAxI,OAAA8C,OACAJ,EAAAJ,QAAAS,QACAyF,EAAAxI,OAAAyF,UAAA/C,EAAAJ,QAAAS,QAIAL,EAAAJ,QAAAM,UACAF,EAAA2C,KAAA3C,EAAAJ,QAAAW,WAEAP,EAAA+F,KAAA,QAAAD,IAEAE,cAAA,SAAAF,GAEA9F,EAAAJ,QAAAO,MAAA2F,EAAAG,OAAA9D,GAAAC,YAAA8D,OACAlG,EAAA2C,KAAA3C,EAAAJ,QAAAW,WAEAmF,GAAAI,EAAAG,OAAA9D,GAAAC,YAAAC,UACAqD,EAAA,EACA1F,EAAA+F,KAAA,UAAAD,IAEAA,EAAAG,OAAA9D,GAAAC,YAAAC,SACArC,EAAA+F,KAAA,OAAAD,GAEAA,EAAAG,OAAA9D,GAAAC,YAAA+D,QACAnG,EAAA+F,KAAA,QAAAD,GAEAA,EAAAG,OAAA9D,GAAAC,YAAA8D,OACAlG,EAAA+F,KAAA,MAAAD,GAIA9F,EAAAJ,QAAAY,UACAsF,EAAAG,OAAA9D,GAAAC,YAAAC,QACAsD,EAAAS,YAAA,WACApG,EAAAJ,QAAAY,SAAAR,EAAAgC,OAAAqE,kBAAArG,EAAAJ,QAAAY,UACAR,EAAAJ,QAAAO,KACAH,EAAA2C,KAAA3C,EAAAJ,QAAAW,WAEAP,EAAA8C,UAGA,KAEAwD,cAAAX,MAMA,IAAAY,GAAAvG,EAAAgD,QACA,GAAAuD,EAAA,CACA,IAAAC,EAAA7B,SAAAC,cAAA,OACA4B,EAAAC,aAAA,KAAAzG,EAAA0G,UACAhC,EAAAiC,YAAAH,GACA7B,SAAAiC,KAAAD,YAAAjC,GAEA1E,EAAAgC,OAAAhC,EAAAgC,QAAA,IAAA6E,OAAA1E,GAAA2E,OAAA9G,EAAA0G,SAAA1G,EAAA+E,eACAwB,IACAvG,EAAAgD,QAAA2B,SAAAoC,eAAA/G,EAAA0G,UAGA1G,EAAAgH,WAAAC,SAAAjH,EAAAgD,QAAAkE,aAAA,SAAA,KAAA,KACAlH,EAAAmH,YAAAF,SAAAjH,EAAAgD,QAAAkE,aAAA,UAAA,KAAA,KAKA,GAAA,UAAAlH,EAAA2B,KAAA,CACA3B,EAAA+E,cAAA,GAEA/E,EAAA+E,eAAA,aAAA/E,EAAA0G,SACA1G,EAAA+E,eAAA,eACA/E,EAAA+E,eAAA,iBAGA/E,EAAAJ,QAAAU,cACAN,EAAA+E,eAAA,wCAIA/E,EAAA+E,eAAA,cAAA/E,EAAAJ,QAAAM,SAAA,IAAA,KAGAF,EAAA+E,eAAA,UAAA/E,EAAAJ,QAAAO,KAAA,EAAA,GAEAH,EAAAgD,UACAhD,EAAAgD,QAAA2B,SAAAC,cAAA,UACA5E,EAAAgD,QAAAyD,aAAA,KAAAzG,EAAA0G,UACA1G,EAAAgD,QAAAyD,aAAA,MAAA,kCAAAzG,EAAAU,QAAA,IAAAV,EAAA+E,eACA/E,EAAAgD,QAAAyD,aAAA,cAAA,KACA/B,EAAAiC,YAAA3G,EAAAgD,SACA2B,SAAAiC,KAAAD,YAAAjC,IAGA1E,EAAAgC,OAAAhC,EAAAgC,QAAA,IAAAT,MAAAuF,OAAA9G,EAAAgD,SAGAhD,EAAAgC,OAAAoF,gBAAA3E,KAAA,SAAAkB,GACA3D,EAAAgH,WAAArD,GAAA,OAEA3D,EAAAgC,OAAAqF,iBAAA5E,KAAA,SAAA6E,GACAtH,EAAAmH,YAAAG,GAAA,MAIAtH,EAAAJ,QAAAW,WAAAP,EAAAJ,QAAAM,UACAF,EAAAgC,OAAAO,eAAAvC,EAAAJ,QAAAW,WAIAP,EAAAJ,QAAAQ,KACAJ,EAAAgC,OAAAe,UAAA,GACA/C,EAAAJ,QAAAS,QACAL,EAAAgC,OAAAe,UAAA/C,EAAAJ,QAAAS,QAGA,IAAAkH,OAAA,EACAvH,EAAAgC,OAAAwF,GAAA,aAAA,SAAA1B,GACAyB,GACAvH,EAAA+F,KAAA,UAAAD,GAEAyB,EAAA,EAGAvH,EAAAJ,QAAAY,SACAR,EAAAJ,QAAAY,SAAAsF,EAAA2B,SAAAzH,EAAAJ,QAAAY,UACAR,EAAAJ,QAAAO,KACAH,EAAA2C,KAAA3C,EAAAJ,QAAAW,WAEAP,EAAA8C,WAKA9C,EAAAgC,OAAAwF,GAAA,OAAA,SAAA1B,GACA9F,EAAA+F,KAAA,OAAAD,GAGA9F,EAAAJ,QAAAW,WAAA,IAAAuF,EAAA2B,SACAzH,EAAA2C,KAAA3C,EAAAJ,QAAAW,aAGAP,EAAAgC,OAAAwF,GAAA,QAAA,SAAA1B,GACA9F,EAAA+F,KAAA,QAAAD,KAEA9F,EAAAgC,OAAAwF,GAAA,QAAA,SAAA1B,GACA9F,EAAA+F,KAAA,MAAAD,KAEA9F,EAAAgC,OAAAwF,GAAA,SAAA,SAAA1B,GACA9F,EAAA+F,KAAA,QAAAD,KAWA,GAAA,UAAA9F,EAAA2B,KAAA,CACA3B,EAAAgD,UACAhD,EAAAgD,QAAA2B,SAAAC,cAAA,SAGA5E,EAAAJ,QAAAQ,KACAJ,EAAAgD,QAAAC,OAAA,EACAjD,EAAAgD,QAAA3C,SACAL,EAAAgD,QAAA3C,OAAAL,EAAAJ,QAAAS,OAAA,KAIAL,EAAAJ,QAAAO,OACAH,EAAAgD,QAAA7C,MAAA,GAIAH,EAAAgD,QAAAyD,aAAA,cAAA,IACAzG,EAAAgD,QAAAyD,aAAA,qBAAA,IAEAzG,EAAAgD,QAAAyD,aAAA,KAAAzG,EAAA0G,UACAhC,EAAAiC,YAAA3G,EAAAgD,SACA2B,SAAAiC,KAAAD,YAAAjC,GAEAzI,OAAA+E,KAAAhB,EAAAU,SAAAO,QAAA,SAAAtD,GA9BA,IAAA+J,EAAA9D,EAAAjC,EACAgG,EADAD,EA+BA1H,EAAAgD,QA/BAY,EA+BA5D,EAAAU,QAAA/C,GA/BAgE,EA+BA,SAAAhE,GA9BAgK,EAAAhD,SAAAC,cAAA,WACAhB,IAAAA,EACA+D,EAAAhG,KAAAA,EACA+F,EAAAf,YAAAgB,MA+BA3H,EAAAgC,OAAAhC,EAAAgC,QAAAhC,EAAAgD,QAEA,IAAA4E,OAAA,EACAzJ,EAAA6B,EAAAgC,OAAA,UAAA,SAAA8D,GACA8B,GACA5H,EAAA+F,KAAA,UAAAD,GAEA8B,EAAA,IAEAzJ,EAAA6B,EAAAgC,OAAA,aAAA,WAEAhC,EAAAJ,QAAAY,SACAR,EAAAJ,QAAAY,SAAAxC,KAAA4E,aAAA5C,EAAAJ,QAAAY,UACAR,EAAAJ,QAAAO,KACAH,EAAA2C,KAAA3C,EAAAJ,QAAAW,WAEAP,EAAA8C,WAKA3E,EAAA6B,EAAAgC,OAAA,OAAA,SAAA8D,GACA9F,EAAA+F,KAAA,OAAAD,KAEA3H,EAAA6B,EAAAgC,OAAA,QAAA,SAAA8D,GACA9F,EAAA+F,KAAA,QAAAD,KAEA3H,EAAA6B,EAAAgC,OAAA,QAAA,SAAA8D,GACA9F,EAAA+F,KAAA,MAAAD,KAEA3H,EAAA6B,EAAAgC,OAAA,iBAAA,WAEAhC,EAAAgH,WAAAhJ,KAAAgJ,YAAA,KACAhH,EAAAmH,YAAAnJ,KAAAmJ,aAAA,IAEAnH,EAAA+F,KAAA,SAGA/F,EAAAJ,QAAAM,UACAF,EAAA2C,KAAA3C,EAAAJ,QAAAW,aAKAtB,EAAAe,EAAAgD,cAIArF,IAAA,OACAb,MAAA,WACAkB,KAEA0I,SAAA,eAFA1I,KAEAoB,MAGAzB,IAAA,UACAb,MAAA,WAGA,IAAAuC,IAAAC,EAAA,CAIA,IAAAsE,EAAA,GAcA,GAXA,YATA5F,KASA2D,MAAAtC,IACAA,EAAA,EACAuE,EAAA,sCAIA,UAfA5F,KAeA2D,MAAArC,IACAA,EAAA,EACAsE,EAAA,0CAGAA,EAAA,CAKA,IAAAiE,EAAAlD,SAAAC,cAAA,UACAkD,EAAAnD,SAAAoD,qBAAA,QAAA,GACAF,EAAAjE,IAAAA,EAEAkE,EAAAnB,YAAAkB,GAGAA,EADAC,EAAA,UAIAnK,IAAA,aACAb,MAAA,SAAAmC,GA0BA,GAtBA,YAHAjB,KAGA2D,OAEA,oBAAAQ,IAAA,IAAAA,GAAA6F,QAAAzI,EAUA,YAAA,oBAAA4C,GAAA,YAAApF,EAAAoF,MAAA,IAAAA,GAAA6F,OACA/I,IAEAQ,EAAAT,KAAA,WACAC,OAZAM,EAAA,EAGAsH,OAAAoB,wBAAA,WACApB,OAAAoB,wBAAA,KACAxI,EAAAZ,QAAA,QACAI,OAYA,UAzBAjB,KAyBA2D,KACA,GAAA,oBAAAJ,OAAA/B,EASA,oBAAA+B,MACAtC,IAEAS,EAAAV,KAAA,WACAC,UAbA,CACAO,EAAA,EACA,IAAA0I,EAAA9B,YAAA,WACA,oBAAA7E,QACA+E,cAAA4B,GACAxI,EAAAb,QAAA,QACAI,MAEA,IAWA,UA7CAjB,KA6CA2D,MACA1C,QAKAhE,EA9tBA,GAiuBAK,EAAA6M,QAAAlN","file":"video-worker.min.js","sourcesContent":["/*!\n * Name    : Video Worker\n * Version : 1.0.0\n * Author  : nK <https://nkdev.info>\n * GitHub  : https://github.com/nk-o/video-worker\n */\nvar VideoWorker =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Deferred\n// thanks http://stackoverflow.com/questions/18096715/implement-deferred-object-without-using-jquery\nfunction Deferred() {\n    this._done = [];\n    this._fail = [];\n}\nDeferred.prototype = {\n    execute: function execute(list, args) {\n        var i = list.length;\n        args = Array.prototype.slice.call(args);\n        while (i--) {\n            list[i].apply(null, args);\n        }\n    },\n    resolve: function resolve() {\n        this.execute(this._done, arguments);\n    },\n    reject: function reject() {\n        this.execute(this._fail, arguments);\n    },\n    done: function done(callback) {\n        this._done.push(callback);\n    },\n    fail: function fail(callback) {\n        this._fail.push(callback);\n    }\n};\n\n// init events\nfunction addEventListener(el, eventName, handler) {\n    el.addEventListener(eventName, handler);\n}\n\nvar ID = 0;\nvar YoutubeAPIadded = 0;\nvar VimeoAPIadded = 0;\nvar loadingYoutubePlayer = 0;\nvar loadingVimeoPlayer = 0;\nvar loadingYoutubeDefer = new Deferred();\nvar loadingVimeoDefer = new Deferred();\n\nvar VideoWorker = function () {\n    function VideoWorker(url, options) {\n        _classCallCheck(this, VideoWorker);\n\n        var self = this;\n\n        self.url = url;\n\n        self.options_default = {\n            autoplay: false,\n            loop: false,\n            mute: false,\n            volume: 100,\n            showContols: true,\n\n            // start / end video time in seconds\n            startTime: 0,\n            endTime: 0\n        };\n\n        self.options = self.extend({}, self.options_default, options);\n\n        // check URL\n        self.videoID = self.parseURL(url);\n\n        // init\n        if (self.videoID) {\n            self.ID = ID++;\n            self.loadAPI();\n            self.init();\n        }\n    }\n\n    // Extend like jQuery.extend\n\n\n    _createClass(VideoWorker, [{\n        key: 'extend',\n        value: function extend(out) {\n            var _arguments = arguments;\n\n            out = out || {};\n            Object.keys(arguments).forEach(function (i) {\n                if (!_arguments[i]) {\n                    return;\n                }\n                Object.keys(_arguments[i]).forEach(function (key) {\n                    out[key] = _arguments[i][key];\n                });\n            });\n            return out;\n        }\n    }, {\n        key: 'parseURL',\n        value: function parseURL(url) {\n            // parse youtube ID\n            function getYoutubeID(ytUrl) {\n                // eslint-disable-next-line no-useless-escape\n                var regExp = /.*(?:youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=)([^#\\&\\?]*).*/;\n                var match = ytUrl.match(regExp);\n                return match && match[1].length === 11 ? match[1] : false;\n            }\n\n            // parse vimeo ID\n            function getVimeoID(vmUrl) {\n                // eslint-disable-next-line no-useless-escape\n                var regExp = /https?:\\/\\/(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/([^\\/]*)\\/videos\\/|album\\/(\\d+)\\/video\\/|video\\/|)(\\d+)(?:$|\\/|\\?)/;\n                var match = vmUrl.match(regExp);\n                return match && match[3] ? match[3] : false;\n            }\n\n            // parse local string\n            function getLocalVideos(locUrl) {\n                // eslint-disable-next-line no-useless-escape\n                var videoFormats = locUrl.split(/,(?=mp4\\:|webm\\:|ogv\\:|ogg\\:)/);\n                var result = {};\n                var ready = 0;\n                videoFormats.forEach(function (val) {\n                    // eslint-disable-next-line no-useless-escape\n                    var match = val.match(/^(mp4|webm|ogv|ogg)\\:(.*)/);\n                    if (match && match[1] && match[2]) {\n                        // eslint-disable-next-line prefer-destructuring\n                        result[match[1] === 'ogv' ? 'ogg' : match[1]] = match[2];\n                        ready = 1;\n                    }\n                });\n                return ready ? result : false;\n            }\n\n            var Youtube = getYoutubeID(url);\n            var Vimeo = getVimeoID(url);\n            var Local = getLocalVideos(url);\n\n            if (Youtube) {\n                this.type = 'youtube';\n                return Youtube;\n            } else if (Vimeo) {\n                this.type = 'vimeo';\n                return Vimeo;\n            } else if (Local) {\n                this.type = 'local';\n                return Local;\n            }\n\n            return false;\n        }\n    }, {\n        key: 'isValid',\n        value: function isValid() {\n            return !!this.videoID;\n        }\n\n        // events\n\n    }, {\n        key: 'on',\n        value: function on(name, callback) {\n            this.userEventsList = this.userEventsList || [];\n\n            // add new callback in events list\n            (this.userEventsList[name] || (this.userEventsList[name] = [])).push(callback);\n        }\n    }, {\n        key: 'off',\n        value: function off(name, callback) {\n            var _this = this;\n\n            if (!this.userEventsList || !this.userEventsList[name]) {\n                return;\n            }\n\n            if (!callback) {\n                delete this.userEventsList[name];\n            } else {\n                this.userEventsList[name].forEach(function (val, key) {\n                    if (val === callback) {\n                        _this.userEventsList[name][key] = false;\n                    }\n                });\n            }\n        }\n    }, {\n        key: 'fire',\n        value: function fire(name) {\n            var _this2 = this;\n\n            var args = [].slice.call(arguments, 1);\n            if (this.userEventsList && typeof this.userEventsList[name] !== 'undefined') {\n                this.userEventsList[name].forEach(function (val) {\n                    // call with all arguments\n                    if (val) {\n                        val.apply(_this2, args);\n                    }\n                });\n            }\n        }\n    }, {\n        key: 'play',\n        value: function play(start) {\n            var self = this;\n            if (!self.player) {\n                return;\n            }\n\n            if (self.type === 'youtube' && self.player.playVideo) {\n                if (typeof start !== 'undefined') {\n                    self.player.seekTo(start || 0);\n                }\n                if (YT.PlayerState.PLAYING !== self.player.getPlayerState()) {\n                    self.player.playVideo();\n                }\n            }\n\n            if (self.type === 'vimeo') {\n                if (typeof start !== 'undefined') {\n                    self.player.setCurrentTime(start);\n                }\n                self.player.getPaused().then(function (paused) {\n                    if (paused) {\n                        self.player.play();\n                    }\n                });\n            }\n\n            if (self.type === 'local') {\n                if (typeof start !== 'undefined') {\n                    self.player.currentTime = start;\n                }\n                if (self.player.paused) {\n                    self.player.play();\n                }\n            }\n        }\n    }, {\n        key: 'pause',\n        value: function pause() {\n            var self = this;\n            if (!self.player) {\n                return;\n            }\n\n            if (self.type === 'youtube' && self.player.pauseVideo) {\n                if (YT.PlayerState.PLAYING === self.player.getPlayerState()) {\n                    self.player.pauseVideo();\n                }\n            }\n\n            if (self.type === 'vimeo') {\n                self.player.getPaused().then(function (paused) {\n                    if (!paused) {\n                        self.player.pause();\n                    }\n                });\n            }\n\n            if (self.type === 'local') {\n                if (!self.player.paused) {\n                    self.player.pause();\n                }\n            }\n        }\n    }, {\n        key: 'mute',\n        value: function mute() {\n            var self = this;\n            if (!self.player) {\n                return;\n            }\n\n            if (self.type === 'youtube' && self.player.mute) {\n                self.player.mute();\n\n                // yt mute\n                // if (self.options.mute) {\n                //     e.target.mute();\n                // } else if (self.options.volume) {\n                //     e.target.setVolume(self.options.volume);\n                // }\n            }\n\n            if (self.type === 'vimeo' && self.player.setVolume) {\n                self.player.setVolume(0);\n\n                // vim mute\n                // if (self.options.mute) {\n                //     self.player.setVolume(0);\n                // } else if (self.options.volume) {\n                //     self.player.setVolume(self.options.volume);\n                // }\n            }\n\n            if (self.type === 'local') {\n                self.$iframe.muted = true;\n\n                // local mute\n                // if (self.options.mute) {\n                //     self.$iframe.muted = true;\n                // } else if (self.$iframe.volume) {\n                //     self.$iframe.volume = self.options.volume / 100;\n                // }\n            }\n        }\n    }, {\n        key: 'unmute',\n        value: function unmute() {\n            var self = this;\n            if (!self.player) {\n                return;\n            }\n\n            if (self.type === 'youtube' && self.player.mute) {\n                self.player.unmute();\n            }\n\n            if (self.type === 'vimeo' && self.player.setVolume) {\n                self.player.setVolume(self.options.volume);\n            }\n\n            if (self.type === 'local') {\n                self.$iframe.muted = false;\n            }\n        }\n    }, {\n        key: 'setVolume',\n        value: function setVolume() {\n            var volume = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            var self = this;\n            if (!self.player || !volume) {\n                return;\n            }\n\n            if (self.type === 'youtube' && self.player.setVolume) {\n                self.player.setVolume(volume);\n            }\n\n            if (self.type === 'vimeo' && self.player.setVolume) {\n                self.player.setVolume(volume);\n            }\n\n            if (self.type === 'local') {\n                self.$iframe.volume = volume / 100;\n            }\n        }\n    }, {\n        key: 'getImageURL',\n        value: function getImageURL(callback) {\n            var self = this;\n\n            if (self.videoImage) {\n                callback(self.videoImage);\n                return;\n            }\n\n            if (self.type === 'youtube') {\n                var availableSizes = ['maxresdefault', 'sddefault', 'hqdefault', '0'];\n                var step = 0;\n\n                var tempImg = new Image();\n                tempImg.onload = function () {\n                    // if no thumbnail, youtube add their own image with width = 120px\n                    if ((this.naturalWidth || this.width) !== 120 || step === availableSizes.length - 1) {\n                        // ok\n                        self.videoImage = 'https://img.youtube.com/vi/' + self.videoID + '/' + availableSizes[step] + '.jpg';\n                        callback(self.videoImage);\n                    } else {\n                        // try another size\n                        step++;\n                        this.src = 'https://img.youtube.com/vi/' + self.videoID + '/' + availableSizes[step] + '.jpg';\n                    }\n                };\n                tempImg.src = 'https://img.youtube.com/vi/' + self.videoID + '/' + availableSizes[step] + '.jpg';\n            }\n\n            if (self.type === 'vimeo') {\n                var request = new XMLHttpRequest();\n                request.open('GET', 'https://vimeo.com/api/v2/video/' + self.videoID + '.json', true);\n                request.onreadystatechange = function () {\n                    if (this.readyState === 4) {\n                        if (this.status >= 200 && this.status < 400) {\n                            // Success!\n                            var response = JSON.parse(this.responseText);\n                            self.videoImage = response[0].thumbnail_large;\n                            callback(self.videoImage);\n                        } else {\n                            // Error :(\n                        }\n                    }\n                };\n                request.send();\n                request = null;\n            }\n        }\n    }, {\n        key: 'getIframe',\n        value: function getIframe(callback) {\n            var self = this;\n\n            // return generated iframe\n            if (self.$iframe) {\n                callback(self.$iframe);\n                return;\n            }\n\n            // generate new iframe\n            self.onAPIready(function () {\n                var hiddenDiv = void 0;\n                if (!self.$iframe) {\n                    hiddenDiv = document.createElement('div');\n                    hiddenDiv.style.display = 'none';\n                }\n\n                // Youtube\n                if (self.type === 'youtube') {\n                    self.playerOptions = {};\n                    self.playerOptions.videoId = self.videoID;\n                    self.playerOptions.playerVars = {\n                        autohide: 1,\n                        rel: 0,\n                        autoplay: 0,\n                        // autoplay enable on mobile devices\n                        playsinline: 1\n                    };\n\n                    // hide controls\n                    if (!self.options.showContols) {\n                        self.playerOptions.playerVars.iv_load_policy = 3;\n                        self.playerOptions.playerVars.modestbranding = 1;\n                        self.playerOptions.playerVars.controls = 0;\n                        self.playerOptions.playerVars.showinfo = 0;\n                        self.playerOptions.playerVars.disablekb = 1;\n                    }\n\n                    // events\n                    var ytStarted = void 0;\n                    var ytProgressInterval = void 0;\n                    self.playerOptions.events = {\n                        onReady: function onReady(e) {\n                            // mute\n                            if (self.options.mute) {\n                                e.target.mute();\n                            } else if (self.options.volume) {\n                                e.target.setVolume(self.options.volume);\n                            }\n\n                            // autoplay\n                            if (self.options.autoplay) {\n                                self.play(self.options.startTime);\n                            }\n                            self.fire('ready', e);\n                        },\n                        onStateChange: function onStateChange(e) {\n                            // loop\n                            if (self.options.loop && e.data === YT.PlayerState.ENDED) {\n                                self.play(self.options.startTime);\n                            }\n                            if (!ytStarted && e.data === YT.PlayerState.PLAYING) {\n                                ytStarted = 1;\n                                self.fire('started', e);\n                            }\n                            if (e.data === YT.PlayerState.PLAYING) {\n                                self.fire('play', e);\n                            }\n                            if (e.data === YT.PlayerState.PAUSED) {\n                                self.fire('pause', e);\n                            }\n                            if (e.data === YT.PlayerState.ENDED) {\n                                self.fire('end', e);\n                            }\n\n                            // check for end of video and play again or stop\n                            if (self.options.endTime) {\n                                if (e.data === YT.PlayerState.PLAYING) {\n                                    ytProgressInterval = setInterval(function () {\n                                        if (self.options.endTime && self.player.getCurrentTime() >= self.options.endTime) {\n                                            if (self.options.loop) {\n                                                self.play(self.options.startTime);\n                                            } else {\n                                                self.pause();\n                                            }\n                                        }\n                                    }, 150);\n                                } else {\n                                    clearInterval(ytProgressInterval);\n                                }\n                            }\n                        }\n                    };\n\n                    var firstInit = !self.$iframe;\n                    if (firstInit) {\n                        var div = document.createElement('div');\n                        div.setAttribute('id', self.playerID);\n                        hiddenDiv.appendChild(div);\n                        document.body.appendChild(hiddenDiv);\n                    }\n                    self.player = self.player || new window.YT.Player(self.playerID, self.playerOptions);\n                    if (firstInit) {\n                        self.$iframe = document.getElementById(self.playerID);\n\n                        // get video width and height\n                        self.videoWidth = parseInt(self.$iframe.getAttribute('width'), 10) || 1280;\n                        self.videoHeight = parseInt(self.$iframe.getAttribute('height'), 10) || 720;\n                    }\n                }\n\n                // Vimeo\n                if (self.type === 'vimeo') {\n                    self.playerOptions = '';\n\n                    self.playerOptions += 'player_id=' + self.playerID;\n                    self.playerOptions += '&autopause=0';\n                    self.playerOptions += '&transparent=0';\n\n                    // hide controls\n                    if (!self.options.showContols) {\n                        self.playerOptions += '&badge=0&byline=0&portrait=0&title=0';\n                    }\n\n                    // autoplay\n                    self.playerOptions += '&autoplay=' + (self.options.autoplay ? '1' : '0');\n\n                    // loop\n                    self.playerOptions += '&loop=' + (self.options.loop ? 1 : 0);\n\n                    if (!self.$iframe) {\n                        self.$iframe = document.createElement('iframe');\n                        self.$iframe.setAttribute('id', self.playerID);\n                        self.$iframe.setAttribute('src', 'https://player.vimeo.com/video/' + self.videoID + '?' + self.playerOptions);\n                        self.$iframe.setAttribute('frameborder', '0');\n                        hiddenDiv.appendChild(self.$iframe);\n                        document.body.appendChild(hiddenDiv);\n                    }\n\n                    self.player = self.player || new Vimeo.Player(self.$iframe);\n\n                    // get video width and height\n                    self.player.getVideoWidth().then(function (width) {\n                        self.videoWidth = width || 1280;\n                    });\n                    self.player.getVideoHeight().then(function (height) {\n                        self.videoHeight = height || 720;\n                    });\n\n                    // set current time for autoplay\n                    if (self.options.startTime && self.options.autoplay) {\n                        self.player.setCurrentTime(self.options.startTime);\n                    }\n\n                    // mute\n                    if (self.options.mute) {\n                        self.player.setVolume(0);\n                    } else if (self.options.volume) {\n                        self.player.setVolume(self.options.volume);\n                    }\n\n                    var vmStarted = void 0;\n                    self.player.on('timeupdate', function (e) {\n                        if (!vmStarted) {\n                            self.fire('started', e);\n                        }\n                        vmStarted = 1;\n\n                        // check for end of video and play again or stop\n                        if (self.options.endTime) {\n                            if (self.options.endTime && e.seconds >= self.options.endTime) {\n                                if (self.options.loop) {\n                                    self.play(self.options.startTime);\n                                } else {\n                                    self.pause();\n                                }\n                            }\n                        }\n                    });\n                    self.player.on('play', function (e) {\n                        self.fire('play', e);\n\n                        // check for the start time and start with it\n                        if (self.options.startTime && e.seconds === 0) {\n                            self.play(self.options.startTime);\n                        }\n                    });\n                    self.player.on('pause', function (e) {\n                        self.fire('pause', e);\n                    });\n                    self.player.on('ended', function (e) {\n                        self.fire('end', e);\n                    });\n                    self.player.on('loaded', function (e) {\n                        self.fire('ready', e);\n                    });\n                }\n\n                // Local\n                function addSourceToLocal(element, src, type) {\n                    var source = document.createElement('source');\n                    source.src = src;\n                    source.type = type;\n                    element.appendChild(source);\n                }\n                if (self.type === 'local') {\n                    if (!self.$iframe) {\n                        self.$iframe = document.createElement('video');\n\n                        // mute\n                        if (self.options.mute) {\n                            self.$iframe.muted = true;\n                        } else if (self.$iframe.volume) {\n                            self.$iframe.volume = self.options.volume / 100;\n                        }\n\n                        // loop\n                        if (self.options.loop) {\n                            self.$iframe.loop = true;\n                        }\n\n                        // autoplay enable on mobile devices\n                        self.$iframe.setAttribute('playsinline', '');\n                        self.$iframe.setAttribute('webkit-playsinline', '');\n\n                        self.$iframe.setAttribute('id', self.playerID);\n                        hiddenDiv.appendChild(self.$iframe);\n                        document.body.appendChild(hiddenDiv);\n\n                        Object.keys(self.videoID).forEach(function (key) {\n                            addSourceToLocal(self.$iframe, self.videoID[key], 'video/' + key);\n                        });\n                    }\n\n                    self.player = self.player || self.$iframe;\n\n                    var locStarted = void 0;\n                    addEventListener(self.player, 'playing', function (e) {\n                        if (!locStarted) {\n                            self.fire('started', e);\n                        }\n                        locStarted = 1;\n                    });\n                    addEventListener(self.player, 'timeupdate', function () {\n                        // check for end of video and play again or stop\n                        if (self.options.endTime) {\n                            if (self.options.endTime && this.currentTime >= self.options.endTime) {\n                                if (self.options.loop) {\n                                    self.play(self.options.startTime);\n                                } else {\n                                    self.pause();\n                                }\n                            }\n                        }\n                    });\n                    addEventListener(self.player, 'play', function (e) {\n                        self.fire('play', e);\n                    });\n                    addEventListener(self.player, 'pause', function (e) {\n                        self.fire('pause', e);\n                    });\n                    addEventListener(self.player, 'ended', function (e) {\n                        self.fire('end', e);\n                    });\n                    addEventListener(self.player, 'loadedmetadata', function () {\n                        // get video width and height\n                        self.videoWidth = this.videoWidth || 1280;\n                        self.videoHeight = this.videoHeight || 720;\n\n                        self.fire('ready');\n\n                        // autoplay\n                        if (self.options.autoplay) {\n                            self.play(self.options.startTime);\n                        }\n                    });\n                }\n\n                callback(self.$iframe);\n            });\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var self = this;\n\n            self.playerID = 'VideoWorker-' + self.ID;\n        }\n    }, {\n        key: 'loadAPI',\n        value: function loadAPI() {\n            var self = this;\n\n            if (YoutubeAPIadded && VimeoAPIadded) {\n                return;\n            }\n\n            var src = '';\n\n            // load Youtube API\n            if (self.type === 'youtube' && !YoutubeAPIadded) {\n                YoutubeAPIadded = 1;\n                src = 'https://www.youtube.com/iframe_api';\n            }\n\n            // load Vimeo API\n            if (self.type === 'vimeo' && !VimeoAPIadded) {\n                VimeoAPIadded = 1;\n                src = 'https://player.vimeo.com/api/player.js';\n            }\n\n            if (!src) {\n                return;\n            }\n\n            // add script in head section\n            var tag = document.createElement('script');\n            var head = document.getElementsByTagName('head')[0];\n            tag.src = src;\n\n            head.appendChild(tag);\n\n            head = null;\n            tag = null;\n        }\n    }, {\n        key: 'onAPIready',\n        value: function onAPIready(callback) {\n            var self = this;\n\n            // Youtube\n            if (self.type === 'youtube') {\n                // Listen for global YT player callback\n                if ((typeof YT === 'undefined' || YT.loaded === 0) && !loadingYoutubePlayer) {\n                    // Prevents Ready event from being called twice\n                    loadingYoutubePlayer = 1;\n\n                    // Creates deferred so, other players know when to wait.\n                    window.onYouTubeIframeAPIReady = function () {\n                        window.onYouTubeIframeAPIReady = null;\n                        loadingYoutubeDefer.resolve('done');\n                        callback();\n                    };\n                } else if ((typeof YT === 'undefined' ? 'undefined' : _typeof(YT)) === 'object' && YT.loaded === 1) {\n                    callback();\n                } else {\n                    loadingYoutubeDefer.done(function () {\n                        callback();\n                    });\n                }\n            }\n\n            // Vimeo\n            if (self.type === 'vimeo') {\n                if (typeof Vimeo === 'undefined' && !loadingVimeoPlayer) {\n                    loadingVimeoPlayer = 1;\n                    var vimeoInterval = setInterval(function () {\n                        if (typeof Vimeo !== 'undefined') {\n                            clearInterval(vimeoInterval);\n                            loadingVimeoDefer.resolve('done');\n                            callback();\n                        }\n                    }, 20);\n                } else if (typeof Vimeo !== 'undefined') {\n                    callback();\n                } else {\n                    loadingVimeoDefer.done(function () {\n                        callback();\n                    });\n                }\n            }\n\n            // Local\n            if (self.type === 'local') {\n                callback();\n            }\n        }\n    }]);\n\n    return VideoWorker;\n}();\n\nexports.default = VideoWorker;\n\n/***/ })\n/******/ ]);"]}